// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(testers) {
    var MyTester;
    return MyTester = (function(_super) {

      __extends(MyTester, _super);

      function MyTester() {
        return MyTester.__super__.constructor.apply(this, arguments);
      }

      MyTester.prototype.testServer = function(next) {
        var expect, fsUtil, request, tester;
        tester = this;
        expect = testers.expect;
        request = testers.request;
        fsUtil = require('fs');
        MyTester.__super__.testServer.apply(this, arguments);
        return this.suite('cleanurls', function(suite, test) {
          var baseUrl, filePath, fileUrl, outExpectedPath;
          baseUrl = "http://localhost:" + tester.docpad.config.port;
          outExpectedPath = tester.config.outExpectedPath;
          fileUrl = "" + baseUrl + "/welcome";
          filePath = "" + outExpectedPath + "/welcome.html";
          return test('server should serve URLs without an extension', function(done) {
            return request(fileUrl, function(err, response, actual) {
              var actualStr;
              if (err) {
                return done(err);
              }
              actualStr = actual.toString();
              return fsUtil.readFile(filePath, function(err, expected) {
                var expectedStr;
                if (err) {
                  return done(err);
                }
                expectedStr = expected.toString();
                expect(actualStr).to.equal(expectedStr);
                return done();
              });
            });
          });
        });
      };

      return MyTester;

    })(testers.ServerTester);
  };

}).call(this);
